{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","textContent","innerHTML","cancel","length","Alert","alert","word","lower","charAt","slice","capitalize","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9c80843b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n/* import {Link} from 'react-router-dom'\n */\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n{/*       <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n */}      \n           <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n           <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n{/*             <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n */}          \n          <a className=\"navbar-brand\" href=\"#\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n{/*             <Link className=\"nav-link active\" to=\"/about\">About</Link>\n */}           <a className=\"navbar-brand\" href=\"#\">About</a>   \n           </li>\n        </ul>\n        {/*<form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>*/}\n        <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\n        </div>\n      </div>\n    </div>\n  </nav>\n  )\n}\n\nNavbar.propTypes={\n                  title: PropTypes.string.isRequired,\n                  aboutText: PropTypes.string\n                 }\n\nNavbar.defaultProps={\n                     title:'Set title',\n                     aboutText:'About '\n                   }\n\n\n","import React,{useState} from 'react'\n\n\nexport default function TextForm(props) {\n  const [text, setText]=useState(''); \n\n  const handleUpClick=()=>{\n    //console.log(\"Uppercase was clicked\"+ text);\n    let newText=text.toUpperCase();\n    setText(newText)\n    props.showAlert(\"Converted to uppercase!\",\"success\");\n  }\n  \n  const handlelowClick=()=>{\n    //console.log(\"Uppercase was clicked\"+ text);\n    let newText=text.toLowerCase();\n    setText(newText)\n    props.showAlert(\"Converted to lowercase!\",\"success\");\n  }\n\n  const handleCopy=()=>{\n    //console.log(\"Uppercase was clicked\"+ text);\n    var text= document.getElementById(\"exampleFormControlTextarea1\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Message copied!\",\"success\");\n  }\n   \n  const handleExtraSpaces=()=>{\n    let newText= text.split(/[ ]+/);\n    setText(newText.join(\" \"))\n    props.showAlert(\"Removed Extra spaces!\",\"success\");\n  }\n\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(msg);\n    const toogle = document.getElementById('toggle')\n    if (toogle.textContent === \"Speak\") {\n        toogle.innerHTML = \"Stop\"\n        props.showAlert(\"Started Speaking!\",\"success\")\n    }\n    else {\n        toogle.innerHTML = \"Speak\"\n        if (toogle.innerHTML === \"Speak\"){\n            window.speechSynthesis.cancel()\n            props.showAlert(\"Stoped Speaking!\",\"success\")\n        }\n    }\n}\n\n  const handleOnChange=(event)=>{\n     // console.log(\"On Change\");\n      setText(event.target.value);\n  }\n  return (\n    <>\n    <div className=\"container\" style={{color:props.mode===`dark`?`white`:`#042743`}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode===`light`?`white`:`grey`}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\n            </div> \n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handlelowClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Clear Extra Spaces</button>\n            <button type=\"submit\" onClick={speak} className=\"btn btn-primary mx-2\" id=\"toggle\">Speak</button>\n    </div>\n    <div className=\"container my-3 \" style={{color:props.mode===`dark`?`white`:`#042743`}}>\n       <h1>Your text summary</h1>\n       <p>{text.length>0?text.split(\" \").length:0} words and {text.length} characters</p>\n       <p>{0.008*text.split(\" \").length} minutes read </p>\n       <h2>Preview</h2>\n       <p>{text.length>0?text:\"Enter something in textbox to preview it here\"}</p>\n    </div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    \n    const capitalize=(word)=>{\n        const lower=word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\n    }\n\n  return (\n         props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n               <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n          </div>\n        )\n}\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n/* import About from './Components/About'; */\nimport React,{ useState } from 'react';\nimport Alert from './Components/Alert';\n\n/* import{\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\"; */\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n\n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n       setAlert(null);\n    },1000);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor=\"#042743\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='TextUtils - Dark Mode'\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n   {/*  <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/*  / users---> Component1\n                 /users/home---> Component2*/}\n          {/* <Routes>\n              <Route exact path=\"/about\" element={<About/>}> \n              </Route>\n              <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\" mode={mode} showAlert={showAlert} />}>\n              </Route>\n          </Routes> \n          */}\n          <TextForm heading=\"Enter text to analyze\" mode={mode} showAlert={showAlert} />\n        </div>  \n     {/*  </Router>   */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}